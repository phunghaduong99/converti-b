<!--

    Copyright 2004-2024 the original author or authors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       https://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<?xml version="1.0" encoding="UTF-8"?><!--

    Copyright 2004-2024 the original author or authors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       https://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

--><!--Converted at: Mon Mar 04 23:57:24 KST 2024-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="">
	<!--
		Sorry, I can`t migrate	ickzb
		See console output for further details 
	-->
	<!--
		Sorry, I can`t migrate	icksl
		See console output for further details 
	-->
	<!--
		Sorry, I can`t migrate	oneDayCategory
		See console output for further details 
	-->
	<!--IC卡组包(t_ickzb)-->
	<resultMap id="ickzbResult" type="ickzb">
		<result property="zbid" column="zbid"/>
		<result property="pch" column="pch"/>
		<result property="zbsl" column="zbsl"/>
		<result property="zbr" column="zbr"/>
		<result property="zbsj" column="zbsj"/>
		<result property="slds" column="slds"/>
	</resultMap>
	<!--IC卡组包(t_ickzb)-->
	<resultMap id="ickzbListResult" type="ickzb">
		<result property="zbid" column="zbid"/>
		<result property="pch" column="pch"/>
		<result property="zbsl" column="zbsl"/>
		<result property="zbr" column="zbr"/>
		<result property="zbsj" column="zbsj"/>
		<result property="slds" column="slds"/>
	</resultMap>
	<!--IC卡组包(t_ickzb) 卡未全部电写入-->
	<resultMap id="ickzbListWqbdxrResult" type="ickzb">
		<result property="zbid" column="zbid"/>
		<result property="pch" column="pch"/>
		<result property="zbsl" column="zbsl"/>
		<result property="zbr" column="zbr"/>
		<result property="zbsj" column="zbsj"/>
		<result property="slds" column="slds"/>
		<result property="sfqbys" column="sfqbys"/>
		<result property="dxrbz" column="dxrbz"/>
		<result property="yyssl" column="yyssl"/>
	</resultMap>
	<!--IC卡组包(t_ickzb)印刷信息查询-->
	<resultMap id="ickysResult" type="ickzb">
		<result property="pch" column="pch"/>
		<result property="zbsl" column="zbsl"/>
		<result property="kssxh" column="kssxh"/>
		<result property="bcyssl" column="bcyssl"/>
		<result property="zdsxh" column="zdsxh"/>
		<result property="bcysslByPage" column="bcysslByPage"/>
	</resultMap>
	<!--IC卡组包(t_ickzb)印刷信息查询-->
	<resultMap id="ickdxrResult" type="ickzb">
		<result property="pch" column="pch"/>
		<result property="zbsl" column="zbsl"/>
		<result property="kssxh" column="kssxh"/>
		<result property="bcdxrsl" column="bcdxrsl"/>
		<result property="zdsxh" column="zdsxh"/>
	</resultMap>
	<!--IC卡组包(t_ickzb)查询包内需打印的卡的信息-->
	<resultMap id="ickzbYsListResult" type="ickzb">
		<result property="sxh" column="sxh"/>
		<result property="pch" column="pch"/>
		<result property="ryid" column="ryid"/>
		<result property="ickslid" column="ickslid"/>
		<result property="kh" column="kh"/>
		<result property="yxsksrq" column="yxsksrq"/>
		<result property="yxqhzrq" column="yxqhzrq"/>
		<result property="gwbh" column="gwbh"/>
		<result property="cylbdm" column="cylbdm"/>
		<result property="cylb" column="cylb"/>
		<result property="tpnr" column="tpnr"/>
		<result property="zbsl" column="zbsl"/>
		<result property="zbhsuym" column="zbhsuym"/>
		<result property="cyrybh" column="cyrybh"/>
		<result property="xm" column="xm"/>
		<result property="bm" column="bm"/>
	</resultMap>
	<!--IC卡组包(t_ickzb)查询包内需电写入的卡的信息-->
	<resultMap id="ickzbDxrListResult" type="icksl">
		<result property="sxh" column="sxh"/>
		<result property="ryid" column="ryid"/>
		<result property="cyrybh" column="cyrybh"/>
		<result property="xm" column="xm"/>
		<result property="zjhm" column="zjhm"/>
		<result property="xbdm" column="xbdm"/>
		<result property="xb" column="xb"/>
		<result property="minzu" column="minzu"/>
		<result property="mzdm" column="mzdm"/>
		<result property="gjdm" column="gjdm"/>
		<result property="gj" column="gj"/>
		<result property="csrq" column="csrq"/>
		<result property="hjdxzqh" column="hjdxzqh"/>
		<result property="hjdxzqhdm" column="hjdxzqhdm"/>
		<result property="hjdxz" column="hjdxz"/>
		<result property="hylbdm" column="hylbdm"/>
		<result property="hjlbdm" column="hjlbdm"/>
		<result property="hjlbmc" column="hjlbmc"/>
		<result property="cylbdm" column="cylbdm"/>
		<result property="cylb" column="cylb"/>
		<result property="ickslid" column="ickslid"/>
		<result property="yxsksrq" column="yxsksrq"/>
		<result property="yxqhzrq" column="yxqhzrq"/>
		<result property="kh" column="kh"/>
		<result property="ywx" column="ywx"/>
		<result property="ywm" column="ywm"/>
		<result property="wgrjyxkz" column="wgrjyxkz"/>
		<result property="hjlbdm" column="hjlbdm"/>
		<result property="hjlbmc" column="hjlbmc"/>
		<result property="cylbdm" column="cylbdm"/>
		<result property="cylb" column="cylb"/>
		<result property="sfzx" column="sfzx"/>
		<result property="sfzxmc" column="sfzxmc"/>
	</resultMap>
	<sql id="t_ickzbWhere">
			<if test="zbid != null and zbid != ''">and
				a.zbid=#{zbid}
			</if>
	</sql>
	<sql id="t_ickzbPageWhere">
		<include refid="t_ickzbWhere"/>	</sql>
	<sql id="t_ickzbListWhere">
		<include refid="t_ickzbWhere"/>	</sql>
	<sql id="t_ickzbSelectWhere">
		<include refid="t_ickzbWhere"/>	</sql>
	<!--IC卡组包(t_ickzb)-->
	<insert id="insertIckzb" parameterType="ickzb">
		insert into t_ickzb (
		<!--
		Sorry, I can`t migrate	
		See console output for further details 
	-->
		) values (
		<!--
		Sorry, I can`t migrate	
		See console output for further details 
	-->
		)
	</insert>
	<!--IC卡组包(t_ickzb)-->
	<update id="updateIckzb" parameterType="ickzb">
		update t_ickzb a set a.zbid=a.zbid
		<!--
		Sorry, I can`t migrate	
		See console output for further details 
	-->
		where 1=1
		<!--
		Sorry, I can`t migrate	
		See console output for further details 
	-->
	</update>
	<!--IC卡组包(t_ickzb)-->
	<delete id="deleteIckzb" parameterType="ickzb">
		delete from t_ickzb a where 1=1 
		<!--
		Sorry, I can`t migrate	
		See console output for further details 
	-->
	</delete>
	<!--IC卡组包(t_ickzb)-->
	<select id="getIckzbList" parameterType="map" resultMap="ickzbListWqbdxrResult">
		select x.* from (
		select rownum rowno,z.* from 
		(select a.zbid zbid,a.pch pch,a.zbsl zbsl,a.zbr zbr,a.zbsj zbsj,a.slds slds,
			(case when b.yyssl&lt;a.zbsl then 0 else 1 end) sfqbys,
			(case when b.ddxrsl&gt;0 then 1 else 0 end) dxrbz,
				b.yyssl
			 from t_ickzb a,
			(select t.zbid,
			count(case when to_number(t2.zkztbs)&gt;=4 then t2.ickslid else null end) yyssl ,
			count(case when to_number(t2.zkztbs)=4 then t2.ickslid else null end) ddxrsl,
			count(case when to_number(t2.zkztbs)&gt;=5 then t2.ickslid else null end) ydxrsl 
			from t_ickzb t ,t_icksl_ickzb t1,t_icksl t2
			where t.zbid=t1.zbid and t1.ickslid=t2.ickslid
			and to_number(t2.zkztbs) &gt;= 3
			group by t.zbid
			)b
			where a.zbid=b.zbid
			and b.ydxrsl&lt;a.zbsl
			and a.zbsl&gt;0
		order by ${pageSort})  z) x where rowno &gt;${beginRow} and rowno &lt;= ${endRow} 
	</select>
	<!--IC卡组包(t_ickzb)-->
	<select id="getIckzbListCount" parameterType="map" resultType="int">
		select count(1) a from t_ickzb a,
			(select t.zbid,
			count(case when to_number(t2.zkztbs)&gt;=4 then t2.ickslid else null end) yyssl ,
			count(case when to_number(t2.zkztbs)=4 then t2.ickslid else null end) ddxrsl,
			count(case when to_number(t2.zkztbs)&gt;=5 then t2.ickslid else null end) ydxrsl 
			from t_ickzb t ,t_icksl_ickzb t1,t_icksl t2
			where t.zbid=t1.zbid and t1.ickslid=t2.ickslid
			and to_number(t2.zkztbs) &gt;= 3
			group by t.zbid
			)b
			where a.zbid=b.zbid
			and b.ydxrsl&lt;a.zbsl
			and a.zbsl&gt;0
	</select>
	<!--IC卡组包(t_ickzb)-->
	<select id="getIckzbListNoPage" parameterType="ickzb" resultMap="ickzbListResult">
		select a.zbid zbid,a.pch pch,a.zbsl zbsl,a.zbr zbr,a.zbsj zbsj,a.slds slds
		from t_ickzb a
		where 1=1
		<!--
		Sorry, I can`t migrate	
		See console output for further details 
	-->
		order by a.zbid
	</select>
	<!--IC卡组包(t_ickzb)-->
	<select id="getIckzb" parameterType="ickzb" resultMap="ickzbResult">
		select a.zbid zbid,a.pch pch,a.zbsl zbsl,a.zbr zbr,a.zbsj zbsj,a.slds slds
		from t_ickzb a
		where 1=1
		<!--
		Sorry, I can`t migrate	
		See console output for further details 
	-->
		order by a.zbid
	</select>
	<!--IC卡组包(t_ickzb) 未印刷信息查询 查询批次号，组包数量，开始顺序号及本次需印刷数量-->
	<!-- <select id="getIckzbYsxx" resultMap="ickysResult" parameterClass="ickzb">
		select a.pch, a.zbsl, min(a.sxh) kssxh, count(a.ickslid) bcyssl,
		(select max(t2.pczdpbh * t2.zbhsuym) zdsxh
		          from t_ickzb t1, t_icksl_ickzb t2
		         where t1.zbid = t2.zbid
		           and t1.pch = #{pch}) zdsxh
		  from (select a.pch, a.zbsl, b.pczdpbh * b.zbhsuym sxh, b.ickslid
		          from t_ickzb a, t_icksl_ickzb b, t_icksl c
		         where a.zbid = b.zbid
		           and b.ickslid = c.ickslid
		           and c.zkztbs = '3'
				and a.pch = #{pch}     
		         order by c.ickslid) a
		 group by a.pch, a.zbsl
	</select> -->
	<select id="getIckzbYsxx" parameterType="ickzb" resultMap="ickysResult">
		select a.pch, a.zbsl, min(a.sxh) kssxh, count(a.ickslid) bcyssl,
    (select max(t2.pczdpbh+(t2.zbhsuym-1)*${maxRowsOfPage}) zdsxh
              from t_ickzb t1, t_icksl_ickzb t2
             where t1.zbid = t2.zbid
               and t1.pch = #{pch}) zdsxh,
               count(a.ickslidByPage) bcysslByPage
      from (select a.pch, a.zbsl,
           (case when c.zkztbs = '3' then  (${maxRowsOfPage} * (b.zbhsuym-1)+b.pczdpbh) else null end) sxh,
           (case when c.zkztbs = '3' then  b.ickslid else null end)  ickslid,
           (case when c.zkztbs = '3' or c.zkztbs ='4' then  b.ickslid else null end)  ickslidByPage
              from t_ickzb a, t_icksl_ickzb b, t_icksl c
             where a.zbid = b.zbid
               and b.ickslid = c.ickslid
        and a.pch = #{pch}
             order by c.ickslid) a
     group by a.pch, a.zbsl
	</select> 
	<!--IC卡组包(t_ickzb)查询包内需打印的卡的信息-->
	<select id="getIckzbYsList" parameterType="map" resultMap="ickzbYsListResult">
		select x.* from (
		select rownum rowno,z.* from 
		(select (b.pczdpbh+(b.zbhsuym-1)*#{maxRowsOfPage}) sxh,
				a.pch,
				c.ryid,
		       b.ickslid,
		       c.kh,
		       c.yxsksrq,
		       c.yxqhzrq,
		       d.gwbh,
		       substr(d.cylbdm,0,1) cylbdm,
		       d.cylbdm cylb,
		       e.tpnr,
		       a.zbsl,
		       b.zbhsuym,
		       d.cyrybh,
		       d.xm,
		       d.bm
		  from t_ickzb a, t_icksl_ickzb b, t_icksl c,t_qyryxx d,t_qyry_zp e
		 where a.zbid = b.zbid
		   and b.ickslid = c.ickslid
		   and c.ryid=d.ryid
		   and d.ryid=e.ryid
		   and e.tplx='0'
		<!--
		Sorry, I can`t migrate	
		See console output for further details 
	--> 
		order by ${pageSort})  z) x where rowno &gt;${beginRow} and rowno &lt;= ${endRow} 
	</select>
	<!--IC卡组包(t_ickzb)-->
	<select id="getIckzbYsListCount" parameterType="map" resultType="int">
		select count(1) a from t_ickzb a, t_icksl_ickzb b, t_icksl c,t_qyryxx d,t_qyry_zp e
		 where a.zbid = b.zbid
		   and b.ickslid = c.ickslid
		   and c.ryid=d.ryid
		   and d.ryid=e.ryid
		   and e.tplx='0'
		<!--
		Sorry, I can`t migrate	
		See console output for further details 
	--> 
	</select>
	
	<!--IC卡组包(t_ickzb) 未电写入信息查询 查询批次号，组包数量，开始顺序号及本次需电写入数量-->
	<select id="getIckzbDxrxx" parameterType="ickzb" resultMap="ickdxrResult">
		select a.pch, a.zbsl, min(a.sxh) kssxh, count(a.ickslid) bcdxrsl,
		(select max(t2.pczdpbh+(t2.zbhsuym-1)*${maxRowsOfPage}) zdsxh
		          from t_ickzb t1, t_icksl_ickzb t2
		         where t1.zbid = t2.zbid
		           and t1.pch = #{pch}) zdsxh
		  from (select a.pch, a.zbsl, (${maxRowsOfPage} * (b.zbhsuym-1)+b.pczdpbh) sxh, b.ickslid
		          from t_ickzb a, t_icksl_ickzb b, t_icksl c
		         where a.zbid = b.zbid
		           and b.ickslid = c.ickslid
		           and c.zkztbs = '4'
				   and a.pch = #{pch}
		         order by c.ickslid) a
		 group by a.pch, a.zbsl
	</select>

	<!--IC卡组包(t_ickzb)查询包内需电写入的卡的信息-->
	<select id="getIckzbDxrList" parameterType="ickzb" resultMap="ickzbDxrListResult">
		select (b.pczdpbh+(b.zbhsuym-1)*${maxRowsOfPage}) sxh,
		       d.ryid,
		       d.cyrybh,
		       d.xm,
		       d.zjhm,
		       d.xbdm,d.xb,
		       d.minzu,d.mzdm,
		       d.gjdm,d.gj,
		       d.csrq,
		       d.hjdxzqh,d.hjdxzqhdm,d.hjdxz,
		       c.yxsksrq,c.yxqhzrq,c.kh,c.hylbdm,d.hjlbdm,d.hjlbmc,d.cylbdm,d.cylb,c.ickslid,d.hjlbdm,d.hjlbmc,d.cylbdm,d.cylb,
		       (case when (c.zkztbs = '7' or c.zkztbs = '8' or c.zkztbs = '9') then '1' else '0' end) sfzx,
		       (case when (c.zkztbs = '7' or c.zkztbs = '8' or c.zkztbs = '9') then '是' else '否' end) sfzxmc,
		       e.ywx,e.ywm,e.wgrjyxkz
		      from t_ickzb a, t_icksl_ickzb b, t_icksl c,t_qyryxx d,t_wgcyryxx e
		     where a.zbid = b.zbid
		       and b.ickslid = c.ickslid
		       and c.ryid=d.ryid
		       and d.ryid=e.ryid(+)
		<!--
		Sorry, I can`t migrate	
		See console output for further details 
	--> 
		order by sxh
	</select>
	<!--IC卡组包(t_ickzb)查询包内IC卡最大顺序号-->
	<select id="getMaxpbhInIckzb" parameterType="ickzb" resultType="String">
		select nvl(max(b.pczdpbh * b.zbhsuym),0) zdsxh
		  from t_ickzb a, t_icksl_ickzb b
		 where a.zbid = b.zbid
		   and a.pch=#{pch}
	</select>
	
	<!--IC卡组包(t_ickzb) 获得下一个pch-->
	<select id="getNextPch" parameterType="map" resultType="String">
		select (case
         when tt.nextpch is null then
          #{pch} || '0001'
         else
          tt.nextpch
       end) nextpch
  from (select to_char(max(to_number(t.pch)) + 1) nextpch
          from t_ickzb t
         where t.pch like #{likepch}) tt
	</select>
</mapper>